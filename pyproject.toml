# Build system configuration
[build-system]
requires = ["setuptools>=61.0"]  # Specifies that we need setuptools version 61.0 or higher to build this project
build-backend = "setuptools.build_meta"  # Tells the build system to use setuptools' build backend

# Project metadata
[project]
name = "AutoWriterLLM"  # The name of the package as it will appear on PyPI
version = "0.1.0"  # The current version of the package (using semantic versioning)
description = "Automatic book writing tool using Large Language Models"  # A short, one-line description of what the package does
readme = {file = "README.md", content-type = "text/markdown"}  # The path to the README file, which will be used as the long description on PyPI
authors = [
  {name = "Yang Xiong", email = "yxiong@umich.edu"}
]
maintainers = [
  {name = "Yang Xiong", email = "yxiong@umich.edu"}
]
classifiers = [  # PyPI classifiers to categorize your project (currently empty)
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["book", "writing", "llm", "ai", "content generation"]
license = {text = "MIT"}  # Specifies that this project is released under the MIT license
dependencies = [
    "typer>=0.9.0",
    "markdown>=3.5.1",
    "typing-extensions>=4.8.0",
    "PyYAML>=6.0.1",
    "anthropic>=0.3.0",
    "tqdm>=4.66.0",
    "requests>=2.31.0",
    "chromadb>=0.4.0",
    "sphinx>=7.1.2",
    "sphinx-rtd-theme>=1.3.0"
]


# Optional development dependencies
[project.optional-dependencies]
dev = [
    "bump2version==1.0.1",
    "wheel==0.41.3",
    "watchdog==3.0.0",
    "tox==4.11.4",
    "coverage==7.3.2",
    "twine==4.0.2",
    "ruff==0.1.9",
    "pytest==7.4.3",
    "mypy==1.7.1",
    "build"
]

# Project URLs
[project.urls]
Homepage = "https://github.com/supersheepbear/autowriterllm"
Documentation = "https://autowriterllm.readthedocs.io"
Repository = "https://github.com/supersheepbear/autowriterllm.git"
Issues = "https://github.com/supersheepbear/autowriterllm/issues"

# Setuptools configuration
[tool.setuptools]
package-dir = {"" = "src"}  # Tells setuptools that the packages are in the 'src' directory

# Package data configuration
[tool.setuptools.package-data]
"*" = ["*.*"]  # Includes all files in all packages when distributing




# Mypy
# ----

[tool.mypy]
files = "."  # Tells mypy to check all Python files in the current directory and subdirectories

# Use strict defaults
strict = true  # Enables all of mypy's strict checking options
warn_unreachable = true  # Warns about code that mypy thinks can never be reached
warn_no_return = true  # Warns about functions that never explicitly return

[[tool.mypy.overrides]]
# Special settings for test files
module = "tests.*"  # These settings apply to all files in the 'tests' directory
allow_untyped_defs = true  # Allows functions in tests to be defined without type annotations
disable_error_code = "attr-defined"  # Disables warnings about undefined attributes in tests

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
]

[tool.coverage.html]
directory = "htmlcov"
